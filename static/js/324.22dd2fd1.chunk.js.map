{"version":3,"file":"static/js/324.22dd2fd1.chunk.js","mappings":"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","sources":["pages/components-overview/Color.js","pages/components-overview/ComponentSkeleton.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box, Card, Grid, Stack, Typography } from '@mui/material';\n\n// project import\nimport MainCard from 'components/MainCard';\nimport ComponentSkeleton from './ComponentSkeleton';\n\n// ===============================|| COLOR BOX ||=============================== //\n\nfunction ColorBox({ bgcolor, title, data, dark, main }) {\n    return (\n        <>\n            <Card sx={{ '&.MuiPaper-root': { borderRadius: '0px' } }}>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        py: 2.5,\n                        bgcolor,\n                        color: dark ? 'grey.800' : '#ffffff',\n                        border: main ? '1px dashed' : '1px solid transparent'\n                    }}\n                >\n                    {title && (\n                        <Grid container justifyContent=\"space-around\" alignItems=\"center\">\n                            <Grid item>\n                                {data && (\n                                    <Stack spacing={0.75} alignItems=\"center\">\n                                        <Typography variant=\"subtitle2\">{data.label}</Typography>\n                                        <Typography variant=\"subtitle1\">{data.color}</Typography>\n                                    </Stack>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                    {title}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    )}\n                </Box>\n            </Card>\n        </>\n    );\n}\n\nColorBox.propTypes = {\n    bgcolor: PropTypes.string,\n    title: PropTypes.string,\n    data: PropTypes.object.isRequired,\n    dark: PropTypes.bool,\n    main: PropTypes.bool\n};\n\n// ===============================|| COMPONENT - COLOR ||=============================== //\n\nconst ComponentColor = () => (\n    <ComponentSkeleton>\n        <Grid container spacing={3}>\n            <Grid item xs={12} sm={6} md={4}>\n                <MainCard title=\"Primary Color\" codeHighlight>\n                    <Stack>\n                        <ColorBox bgcolor=\"primary.lighter\" data={{ label: 'Blue-1', color: '#e6f7ff' }} title=\"primary.lighter\" dark />\n                        <ColorBox bgcolor=\"primary.100\" data={{ label: 'Blue-2', color: '#bae7ff' }} title=\"primary[100]\" dark />\n                        <ColorBox bgcolor=\"primary.200\" data={{ label: 'Blue-3', color: '#91d5ff' }} title=\"primary[200]\" dark />\n                        <ColorBox bgcolor=\"primary.light\" data={{ label: 'Blue-4', color: '#69c0ff' }} title=\"primary.light\" dark />\n                        <ColorBox bgcolor=\"primary.400\" data={{ label: 'Blue-5', color: '#40a9ff' }} title=\"primary[400]\" />\n                        <ColorBox bgcolor=\"primary.main\" data={{ label: 'Blue-6', color: '#1890ff' }} title=\"primary.main\" main />\n                        <ColorBox bgcolor=\"primary.dark\" data={{ label: 'Blue-7', color: '#096dd9' }} title=\"primary.dark\" />\n                        <ColorBox bgcolor=\"primary.700\" data={{ label: 'Blue-8', color: '#0050b3' }} title=\"primary[700]\" />\n                        <ColorBox bgcolor=\"primary.darker\" data={{ label: 'Blue-9', color: '#003a8c' }} title=\"primary.darker\" />\n                        <ColorBox bgcolor=\"primary.900\" data={{ label: 'Blue-10', color: '#002766' }} title=\"primary.900\" />\n                    </Stack>\n                </MainCard>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n                <MainCard title=\"Secondary Color\" codeHighlight>\n                    <Stack>\n                        <ColorBox bgcolor=\"secondary.lighter\" data={{ label: 'Grey-1', color: '#fafafa' }} title=\"secondary.lighter\" dark />\n                        <ColorBox bgcolor=\"secondary.100\" data={{ label: 'Grey-2', color: '#f5f5f5' }} title=\"secondary[100]\" dark />\n                        <ColorBox bgcolor=\"secondary.200\" data={{ label: 'Grey-3', color: '#f0f0f0' }} title=\"secondary[200]\" dark />\n                        <ColorBox bgcolor=\"secondary.light\" data={{ label: 'Grey-4', color: '#d9d9d9' }} title=\"secondary.light\" dark />\n                        <ColorBox bgcolor=\"secondary.400\" data={{ label: 'Grey-5', color: '#bfbfbf' }} title=\"secondary[400]\" dark />\n                        <ColorBox bgcolor=\"secondary.main\" data={{ label: 'Grey-6', color: '#8c8c8c' }} title=\"secondary.main\" main />\n                        <ColorBox bgcolor=\"secondary.600\" data={{ label: 'Grey-7', color: '#595959' }} title=\"secondary.600\" />\n                        <ColorBox bgcolor=\"secondary.dark\" data={{ label: 'Grey-8', color: '#262626' }} title=\"secondary.dark\" />\n                        <ColorBox bgcolor=\"secondary.800\" data={{ label: 'Grey-9', color: '#141414' }} title=\"secondary[800]\" />\n                        <ColorBox bgcolor=\"secondary.darker\" data={{ label: 'Grey-10', color: '#000000' }} title=\"secondary.darker\" />\n                    </Stack>\n                </MainCard>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n                <MainCard title=\"Other Color\" codeHighlight>\n                    <Stack>\n                        <ColorBox bgcolor=\"secondary.A100\" data={{ label: 'Grey-A1', color: '#ffffff' }} title=\"secondary.A100\" dark />\n                        <ColorBox bgcolor=\"secondary.A200\" data={{ label: 'Grey-A2', color: '#434343' }} title=\"secondary.A200\" />\n                        <ColorBox bgcolor=\"secondary.A300\" data={{ label: 'Grey-A3', color: '#1f1f1f' }} title=\"secondary.A300\" />\n                    </Stack>\n                </MainCard>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n                <MainCard title=\"Success Color\" codeHighlight>\n                    <Stack>\n                        <ColorBox bgcolor=\"success.lighter\" data={{ label: 'Green-1', color: '#f6ffed' }} title=\"success.lighter\" dark />\n                        <ColorBox bgcolor=\"success.light\" data={{ label: 'Green-4', color: '#95de64' }} title=\"success.light\" dark />\n                        <ColorBox bgcolor=\"success.main\" data={{ label: 'Green-6', color: '#52c41a' }} title=\"success.main\" main />\n                        <ColorBox bgcolor=\"success.dark\" data={{ label: 'Green-8', color: '#237804' }} title=\"success.dark\" />\n                        <ColorBox bgcolor=\"success.darker\" data={{ label: 'Green-10', color: '#092b00' }} title=\"success.darker\" />\n                    </Stack>\n                </MainCard>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n                <MainCard title=\"Error Color\" codeHighlight>\n                    <Stack>\n                        <ColorBox bgcolor=\"error.lighter\" data={{ label: 'Red-1', color: '#fff1f0' }} title=\"error.lighter\" dark />\n                        <ColorBox bgcolor=\"error.light\" data={{ label: 'Red-4', color: '#ff7875' }} title=\"error.light\" dark />\n                        <ColorBox bgcolor=\"error.main\" data={{ label: 'Red-6', color: '#f5222d' }} title=\"error.main\" main />\n                        <ColorBox bgcolor=\"error.dark\" data={{ label: 'Red-8', color: '#a8071a' }} title=\"error.dark\" />\n                        <ColorBox bgcolor=\"error.darker\" data={{ label: 'Red-10', color: '#5c0011' }} title=\"error.darker\" />\n                    </Stack>\n                </MainCard>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n                <MainCard title=\"Warning Color\" codeHighlight>\n                    <Stack>\n                        <ColorBox bgcolor=\"warning.lighter\" data={{ label: 'Gold-1', color: '#fffbe6' }} title=\"warning.lighter\" dark />\n                        <ColorBox bgcolor=\"warning.light\" data={{ label: 'Gold-4', color: '#ffd666' }} title=\"warning.light\" dark />\n                        <ColorBox bgcolor=\"warning.main\" data={{ label: 'Gold-6', color: '#faad14' }} title=\"warning.main\" main />\n                        <ColorBox bgcolor=\"warning.dark\" data={{ label: 'Gold-8', color: '#ad6800' }} title=\"warning.dark\" />\n                        <ColorBox bgcolor=\"warning.darker\" data={{ label: 'Gold-10', color: '#613400' }} title=\"warning.darker\" />\n                    </Stack>\n                </MainCard>\n            </Grid>\n        </Grid>\n    </ComponentSkeleton>\n);\n\nexport default ComponentColor;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid, Skeleton, Stack } from '@mui/material';\n\n// project import\nimport MainCard from 'components/MainCard';\n\n// ===============================|| COMPONENT - SKELETON ||=============================== //\n\nconst ComponentSkeleton = ({ children }) => {\n    const [isLoading, setLoading] = useState(true);\n    useEffect(() => {\n        setLoading(false);\n    }, []);\n\n    const skeletonCard = (\n        <MainCard\n            title={<Skeleton sx={{ width: { xs: 120, md: 180 } }} />}\n            secondary={<Skeleton animation=\"wave\" variant=\"circular\" width={24} height={24} />}\n        >\n            <Stack spacing={1}>\n                <Skeleton />\n                <Skeleton sx={{ height: 64 }} animation=\"wave\" variant=\"rectangular\" />\n                <Skeleton />\n                <Skeleton />\n            </Stack>\n        </MainCard>\n    );\n\n    return (\n        <>\n            {isLoading && (\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                        {skeletonCard}\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        {skeletonCard}\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        {skeletonCard}\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        {skeletonCard}\n                    </Grid>\n                </Grid>\n            )}\n            {!isLoading && children}\n        </>\n    );\n};\n\nComponentSkeleton.propTypes = {\n    children: PropTypes.node\n};\n\nexport default ComponentSkeleton;\n"],"names":["ColorBox","_ref","bgcolor","title","data","dark","main","_jsx","_Fragment","children","Card","sx","borderRadius","Box","display","justifyContent","alignItems","py","color","border","_jsxs","Grid","container","item","Stack","spacing","Typography","variant","label","ComponentColor","ComponentSkeleton","xs","sm","md","MainCard","codeHighlight","isLoading","setLoading","useState","useEffect","skeletonCard","Skeleton","width","secondary","animation","height"],"sourceRoot":""}